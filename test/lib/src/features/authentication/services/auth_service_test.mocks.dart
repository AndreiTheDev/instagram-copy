// Mocks generated by Mockito 5.4.4 from annotations
// in instagram_copy/test/lib/src/features/authentication/services/auth_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:firebase_auth/firebase_auth.dart' as _i6;
import 'package:instagram_copy/src/features/authentication/data/mobile_auth_repository.dart'
    as _i4;
import 'package:instagram_copy/src/features/authentication/domain/models/auth_field.dart'
    as _i2;
import 'package:instagram_copy/src/features/authentication/domain/models/signup_form.dart'
    as _i3;
import 'package:logger/src/log_level.dart' as _i9;
import 'package:logger/src/logger.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthFieldItem_0<T> extends _i1.SmartFake
    implements _i2.AuthFieldItem<T> {
  _FakeAuthFieldItem_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$SignUpFormModelCopyWith_1<$Res> extends _i1.SmartFake
    implements _i3.$SignUpFormModelCopyWith<$Res> {
  _Fake$SignUpFormModelCopyWith_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MobileAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMobileAuthRepository extends _i1.Mock
    implements _i4.MobileAuthRepository {
  @override
  _i5.Future<void> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> signInWithToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #signInWithToken,
          [token],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i6.User?> signUpWithEmail(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithEmail,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i6.User?>.value(),
        returnValueForMissingStub: _i5.Future<_i6.User?>.value(),
      ) as _i5.Future<_i6.User?>);

  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> resetPassword(String? email) => (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [email],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteAccount() => (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> initFirestoreUser(
    String? uid,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #initFirestoreUser,
          [
            uid,
            data,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> generateSignInToken(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #generateSignInToken,
          [uid],
        ),
        returnValue: _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #generateSignInToken,
            [uid],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #generateSignInToken,
            [uid],
          ),
        )),
      ) as _i5.Future<String>);
}

/// A class which mocks [Logger].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogger extends _i1.Mock implements _i8.Logger {
  @override
  void v(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #v,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void t(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #t,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void d(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #d,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void i(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #i,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void w(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #w,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void e(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #e,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void wtf(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #wtf,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void f(
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #f,
          [message],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void log(
    _i9.Level? level,
    dynamic message, {
    DateTime? time,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [
            level,
            message,
          ],
          {
            #time: time,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isClosed() => (super.noSuchMethod(
        Invocation.method(
          #isClosed,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [SignUpFormModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignUpFormModel extends _i1.Mock implements _i3.SignUpFormModel {
  @override
  _i2.AuthFieldItem<String> get completeName => (super.noSuchMethod(
        Invocation.getter(#completeName),
        returnValue: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#completeName),
        ),
        returnValueForMissingStub: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#completeName),
        ),
      ) as _i2.AuthFieldItem<String>);

  @override
  _i2.AuthFieldItem<String> get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#password),
        ),
        returnValueForMissingStub: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#password),
        ),
      ) as _i2.AuthFieldItem<String>);

  @override
  _i2.AuthFieldItem<DateTime> get birthday => (super.noSuchMethod(
        Invocation.getter(#birthday),
        returnValue: _FakeAuthFieldItem_0<DateTime>(
          this,
          Invocation.getter(#birthday),
        ),
        returnValueForMissingStub: _FakeAuthFieldItem_0<DateTime>(
          this,
          Invocation.getter(#birthday),
        ),
      ) as _i2.AuthFieldItem<DateTime>);

  @override
  _i2.AuthFieldItem<String> get username => (super.noSuchMethod(
        Invocation.getter(#username),
        returnValue: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#username),
        ),
        returnValueForMissingStub: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#username),
        ),
      ) as _i2.AuthFieldItem<String>);

  @override
  _i2.AuthFieldItem<String> get phoneNumber => (super.noSuchMethod(
        Invocation.getter(#phoneNumber),
        returnValue: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#phoneNumber),
        ),
        returnValueForMissingStub: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#phoneNumber),
        ),
      ) as _i2.AuthFieldItem<String>);

  @override
  _i2.AuthFieldItem<String> get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#email),
        ),
        returnValueForMissingStub: _FakeAuthFieldItem_0<String>(
          this,
          Invocation.getter(#email),
        ),
      ) as _i2.AuthFieldItem<String>);

  @override
  _i3.$SignUpFormModelCopyWith<_i3.SignUpFormModel> get copyWith =>
      (super.noSuchMethod(
        Invocation.getter(#copyWith),
        returnValue: _Fake$SignUpFormModelCopyWith_1<_i3.SignUpFormModel>(
          this,
          Invocation.getter(#copyWith),
        ),
        returnValueForMissingStub:
            _Fake$SignUpFormModelCopyWith_1<_i3.SignUpFormModel>(
          this,
          Invocation.getter(#copyWith),
        ),
      ) as _i3.$SignUpFormModelCopyWith<_i3.SignUpFormModel>);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
